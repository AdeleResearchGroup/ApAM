<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type="text/xsl" href="xs3p.xsl"?>

<xs:schema xmlns:ipojo="org.apache.felix.ipojo"
	attributeFormDefault="unqualified" elementFormDefault="qualified"
	targetNamespace="fr.imag.adele.apam" xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns="fr.imag.adele.apam">
	<xs:import schemaLocation="http://felix.apache.org/ipojo/schemas/CURRENT/core.xsd"
		namespace="org.apache.felix.ipojo" />
	<xs:annotation>
		<xs:documentation>
			ApAM Core XML-Schema.
		</xs:documentation>
	</xs:annotation>

	<xs:element name="apam">
		<xs:annotation>
			<xs:documentation>ApAM top level element,
				descriptor for an OSGi
				bundle
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="specification" />
				<xs:element ref="implementation" />
				<xs:element ref="apam-instance" />

				<xs:element ref="composite" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<!-- ApAM top-level elements description -->

	<xs:element name="specification">
		<xs:complexType>
			<xs:annotation>
				<xs:documentation>Declaration of a specification
					Component (ApAM
					primitive type).
				</xs:documentation>
			</xs:annotation>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="definition" type="DefinitionType" />

				<xs:element name="property" type="PropertyType">
					<xs:annotation>
						<xs:documentation>A property of the
							specification, this property
							will be set as
							final for implementation and
							instance
						</xs:documentation>
					</xs:annotation>
				</xs:element>

				<xs:element name="relation" type="RelationType" />

			</xs:choice>
			<xs:attributeGroup ref="basicComponentAttributes" />
		</xs:complexType>
	</xs:element>

	<xs:element name="implementation">
		<xs:complexType>
			<xs:annotation>
				<xs:documentation>Declaration of a implementation
					Component (ApAM
					primitive type).
				</xs:documentation>
			</xs:annotation>
			<xs:choice minOccurs="0" maxOccurs="unbounded">

				<xs:element name="property" type="PropertyType">
					<xs:annotation>
						<xs:documentation> A property of the
							implementation, this property
							will be set as
							final for instances
						</xs:documentation>
					</xs:annotation>
				</xs:element>

				<xs:element name="definition" type="InjectedDefinitionType" />

				<xs:element name="relation" type="InjectedRelationType">
					<xs:annotation>
						<xs:documentation> A property definition, it
							must be valued by the
							instance.
							if the injected = internal, the value of
							the property can
							be set only by the field
						</xs:documentation>
					</xs:annotation>
				</xs:element>

				<xs:element ref="callback" />
				<xs:element ref="ipojo:requires" />
				<xs:element ref="ipojo:provides" />
				<xs:any namespace="##any" minOccurs="0" processContents="lax"/>

			</xs:choice>
			<xs:attributeGroup ref="basicComponentAttributes" />
			<xs:attribute name="classname" type="xs:string" use="required" />
			<xs:attribute name="push" type="xs:string" use="optional" />
			<xs:attribute name="specification" type="xs:string" use="optional" />
		</xs:complexType>
	</xs:element>

	<xs:element name="apam-instance">
		<xs:complexType>
			<xs:annotation>
				<xs:documentation>Declaration of a instance Component
					(ApAM primitive
					type).
				</xs:documentation>
			</xs:annotation>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="definition" type="DefinitionType" />

				<xs:element name="property" type="PropertyType" />
				<xs:element name="relation" type="RelationType" />
			</xs:choice>
			<xs:attribute name="implementation" type="xs:string"
				use="required" />
			<xs:attribute name="name" type="xs:string" use="required" />
		</xs:complexType>
	</xs:element>

	<xs:element name="composite">
		<xs:complexType>
			<xs:annotation>
				<xs:documentation>Declaration of a composite
					implementation Component
					(ApAM type that allows
					nested Components with encapsulation
					properties).
				</xs:documentation>
			</xs:annotation>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="property" type="PropertyType" />
				<xs:element name="definition" type="DefinitionType" />
				<xs:element name="relation" type="RelationType" />
				<xs:element name="contentMngt" minOccurs="0" maxOccurs="1">
					<xs:complexType>
						<xs:choice minOccurs="0" maxOccurs="unbounded">
							<xs:element name="import" type="VisibilityType"
								minOccurs="0" maxOccurs="1" />
							<xs:element name="export" type="VisibilityType"
								minOccurs="0" maxOccurs="1" />

							<xs:element name="exportApp" type="VisibilityTypeApp"
								minOccurs="0" maxOccurs="1" />

							<xs:element name="state" minOccurs="0" maxOccurs="1">
								<xs:complexType>
									<xs:attribute name="implementation" type="xs:string"
										use="optional" />
									<xs:attribute name="property" type="xs:string"
										use="optional" />
								</xs:complexType>
							</xs:element>

							<xs:element name="start" type="StartType" minOccurs="0"
								maxOccurs="unbounded" />

							<xs:element name="own" type="OwnType" minOccurs="0"
								maxOccurs="unbounded" />

							<xs:element name="promote" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType>
									<xs:attribute name="specification" type="xs:string"
										use="optional" />
									<xs:attribute name="implementation" type="xs:string"
										use="optional" />
									<xs:attribute name="relation" type="xs:string"
										use="optional" />
									<xs:attribute name="to" type="xs:string" use="optional" />
								</xs:complexType>
							</xs:element>

							<xs:element name="override" type="CompositeOverrideType" />
							<xs:element name="relation" type="ContextDependencyType" />

						</xs:choice>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:attribute name="main" type="xs:string" use="optional" />
			<xs:attribute name="specification" type="xs:string" use="optional" />
			<xs:attributeGroup ref="basicComponentAttributes" />
		</xs:complexType>
	</xs:element>

	<!-- ApAM 'definition' and 'property' related types -->

	<xs:complexType name="DefinitionType">
		<xs:annotation>
			<xs:documentation> Defines a component property.
				Used in
				specification
				component and composite implementation.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="name" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation> Name of the property.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="default" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation> Default value of the property.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="type" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation> Type of the property.
					Basic types are
					'int' (value is a signed integer),
					'string' (value	is a string of characters),
					'boolean' (value is	"true" or "false"),
					'float' (a floating point value),
                    'version' (an osgi version value),					
					enumeration (comma separated list of string, ex "red, green, blue").
					It can also be a set of values
					: {string} or {int} or {enumeration}.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>


	<xs:complexType name="PropertyType">

		<xs:attribute name="name" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation> Name of the property.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="value" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation> Default value of the property.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>




	<xs:complexType name="InjectedDefinitionType">
		<xs:complexContent>
			<xs:extension base="DefinitionType">

				<xs:attribute name="injected" type="fieldInjectionStrategyType"
					use="optional" />

				<xs:attribute name="field" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation> Field of the property,
							must be
							defined as a data
							field of the corresponding
							type (String,
							Integer, Boolean, or Set)
							within the
							coressponding class.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="method" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation> Setter method of the
							property. This method is
							called to inject
							property
							value.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>


	<!-- ApAM callback methods -->

	<xs:element name="callback">
		<xs:annotation>
			<xs:documentation> Predefined callback methods called when
				component
				instance is created,
				or is removed. These
				methods : "public void
				methodName() {}" or
				"public void
				methodName( Instance inst)"
				must be
				defined within the
				corresponding class.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="onInit" type="xs:string" use="optional" />
			<xs:attribute name="onRemove" type="xs:string" use="optional" />
		</xs:complexType>
	</xs:element>

	<!-- ApAM relations and dependencies -->

	<xs:complexType name="RelationType">
		<xs:annotation>
			<xs:documentation> A relation declaration</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="constraints" type="ConstraintsType"
				minOccurs="0" maxOccurs="1" />
			<xs:element name="preferences" type="PreferencesType"
				minOccurs="0" maxOccurs="1" />
		</xs:choice>
		<xs:attributeGroup ref="basicRelationAttributes" />
	</xs:complexType>

	<xs:complexType name="InjectedRelationType">
		<xs:annotation>
			<xs:documentation> A relation declaration definition that
				can be
				dynamically synchronized with java data fields
				and
				methods.
			</xs:documentation>
		</xs:annotation>

		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="constraints" type="ConstraintsType"
				minOccurs="0" maxOccurs="1" />
			<xs:element name="preferences" type="PreferencesType"
				minOccurs="0" maxOccurs="1" />
			<xs:element name="interface" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:attribute name="field" type="xs:string" use="optional" />
					<xs:attribute name="method" type="xs:string" use="optional" />
				</xs:complexType>
			</xs:element>
			<xs:element name="message" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:attribute name="push" type="xs:string" use="optional" />
					<xs:attribute name="pull" type="xs:string" use="optional" />
				</xs:complexType>
			</xs:element>
		</xs:choice>
		<xs:attribute name="field" type="xs:string" use="optional" />
		<xs:attribute name="push" type="xs:string" use="optional" />
		<xs:attribute name="pull" type="xs:string" use="optional" />
		<xs:attribute name="added" type="xs:string" use="optional" />
		<xs:attribute name="removed" type="xs:string" use="optional" />
		<xs:attributeGroup ref="basicRelationAttributes" />
	</xs:complexType>

	<xs:complexType name="CompositeOverrideType">
		<xs:annotation>
			<xs:documentation> A relation declaration</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="constraints" type="ConstraintsType"
				minOccurs="0" maxOccurs="1" />
			<xs:element name="preferences" type="PreferencesType"
				minOccurs="0" maxOccurs="1" />
		</xs:choice>
		<xs:attribute name="source" type="xs:string" use="optional" />
		<xs:attributeGroup ref="overrideRelationAttributes" />
	</xs:complexType>



	<!-- ApAM Composite subtypes -->


	<xs:complexType name="StartType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="property" type="PropertyType" />
			<xs:element name="relation" type="RelationType" />
			<xs:element name="trigger" type="TriggerType" minOccurs="0"
				maxOccurs="1" />
		</xs:choice>
		<xs:attribute name="implementation" type="xs:string" use="required" />
		<xs:attribute name="name" type="xs:string" use="required" />
	</xs:complexType>




	<xs:complexType name="OwnType">
		<xs:choice>
			<xs:element name="grant" type="GrantType" minOccurs="0"
				maxOccurs="unbounded" />
			<xs:element name="deny" type="GrantType" minOccurs="0"
				maxOccurs="unbounded" />
		</xs:choice>
		<xs:attribute name="specification" type="xs:string" use="optional" />
		<xs:attribute name="implementation" type="xs:string" use="optional" />

		<xs:attribute name="property" type="xs:string" use="optional" />
		<xs:attribute name="value" type="xs:string" use="optional" />

	</xs:complexType>


	<xs:complexType name="GrantType">
		<xs:attribute name="specification" type="xs:string" use="optional" />
		<xs:attribute name="implementation" type="xs:string" use="optional" />
		<xs:attribute name="relation" type="xs:string" use="optional" />
		<xs:attribute name="when" type="xs:string" use="optional" />
	</xs:complexType>


	<xs:complexType name="ConstraintsType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="implementation" type="FilterAttribute" />
			<xs:element name="instance" type="FilterAttribute" />
		</xs:choice>
	</xs:complexType>

	<xs:complexType name="VisibilityTypeApp">
		<xs:attribute name="instance" type="xs:string" use="optional" />
	</xs:complexType>

	<xs:complexType name="VisibilityType">
		<xs:attribute name="implementation" type="xs:string" use="optional" />
		<xs:attribute name="instance" type="xs:string" use="optional" />
	</xs:complexType>

	<xs:complexType name="FilterAttribute">
		<xs:attribute name="filter" type="xs:string" use="optional" />
	</xs:complexType>

	<xs:complexType name="PreferencesType">
		<xs:complexContent>
			<xs:extension base="ConstraintsType" />
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="TriggerType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="specification" type="TriggerConstraintType"
				minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="implementation" type="TriggerConstraintType"
				minOccurs="0" maxOccurs="unbounded" />
		</xs:choice>
	</xs:complexType>

	<xs:complexType name="TriggerConstraintType">
		<xs:choice>
			<xs:element name="constraints" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:choice>
						<xs:element name="constraint" type="FilterAttribute" />
					</xs:choice>
				</xs:complexType>
			</xs:element>
		</xs:choice>
		<xs:attribute name="name" type="xs:string" use="optional" />
	</xs:complexType>


	<xs:attributeGroup name="basicComponentAttributes">
		<xs:attribute name="name" type="xs:string" use="required" />
		<xs:attribute name="singleton" type="xs:boolean" use="optional" />
		<xs:attribute name="instantiable" type="xs:boolean" use="optional" />
		<xs:attribute name="shared" type="xs:boolean" use="optional" />
		<xs:attribute name="interfaces" type="xs:string" use="optional" />
		<xs:attribute name="messages" type="xs:string" use="optional" />
	</xs:attributeGroup>


	<xs:attributeGroup name="basicRelationAttributes">
		<xs:attribute name="name" type="xs:string" use="optional" />
		<xs:attribute name="specification" type="xs:string" use="optional" />
		<xs:attribute name="implementation" type="xs:string" use="optional" />
		<xs:attribute name="interface" type="xs:string" use="optional" />
		<xs:attribute name="message" type="xs:string" use="optional" />
		<xs:attribute name="multiple" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation>If unspecified, default value is "false"
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="sourceKind" type="apamKindType" use="optional">
			<xs:annotation>
				<xs:documentation>If unspecified, default value is "instance"
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>

		<xs:attribute name="targetKind" type="apamKindType" use="optional">
			<xs:annotation>
				<xs:documentation>If unspecified, default value is "instance"
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>

		<xs:attribute name="creation" type="apamCreationStrategyType"
			use="optional">
			<xs:annotation>
				<xs:documentation>If unspecified, default value is "lazy"
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>

		<xs:attribute name="resolve" type="apamResolveType" use="optional">
			<xs:annotation>
				<xs:documentation>If unspecified, default value is "exist"
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>

		<xs:attribute name="fail" type="apamFailStrategyType"
			use="optional" />

		<xs:attribute name="exception" type="xs:string" use="optional" />
	</xs:attributeGroup>

	<xs:complexType name="ContextDependencyType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="constraints" type="ConstraintsType"
				minOccurs="0" maxOccurs="1" />
			<xs:element name="preferences" type="PreferencesType"
				minOccurs="0" maxOccurs="1" />
		</xs:choice>

		<xs:attribute name="source" type="xs:string" use="optional" />

		<xs:attributeGroup ref="basicRelationAttributes" />

	</xs:complexType>


	<xs:attributeGroup name="overrideRelationAttributes">
		<xs:attribute name="specification" type="xs:string" use="optional" />
		<xs:attribute name="interface" type="xs:string" use="optional" />
		<xs:attribute name="message" type="xs:string" use="optional" />
		<xs:attribute name="implementation" type="xs:string" use="optional" />
		<xs:attribute name="name" type="xs:string" use="optional" />
		<xs:attribute name="exception" type="xs:string" use="optional" />
		<xs:attribute name="sourceKind" type="apamKindType" use="optional" />
		<xs:attribute name="targetKind" type="apamKindType" use="optional" />
		<xs:attribute name="fail" type="apamFailStrategyType"
			use="optional" />
		<xs:attribute name="creation" type="apamCreationStrategyType"
			use="optional" />
		<xs:attribute name="resolve" type="apamResolveType" use="optional" />
	</xs:attributeGroup>

	<xs:simpleType name="apamKindType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="implementation" />
			<xs:enumeration value="specification" />
			<xs:enumeration value="instance" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="apamResolveType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="exist" />
			<xs:enumeration value="internal" />
			<xs:enumeration value="external" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="apamFailStrategyType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="exception" />
			<xs:enumeration value="wait" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="apamCreationStrategyType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="manual" />
			<xs:enumeration value="lazy" />
			<xs:enumeration value="eager" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="fieldInjectionStrategyType">
		<xs:annotation>
			<xs:documentation>Defines the behavior of field Injection.
				Internal
				means field can only be changed within the java
				class.
				External means
				that it can only be changed by ApAM
				(using descriptor or
				setProperty).
				Both is default value,
				changes are bidirectionnal from
				java OR from ApAM
				(the
				last one who spoke who's right). A value
				defined in
				ApAM
				descriptor will erase the one defined by the
				constructor.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="internal" />
			<xs:enumeration value="external" />
			<xs:enumeration value="both" />
		</xs:restriction>
	</xs:simpleType>

</xs:schema>
