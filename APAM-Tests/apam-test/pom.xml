<<<<<<< HEAD
<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	  	<parent>
		<artifactId>APAM-Tests</artifactId>
		<groupId>fr.imag.adele.apam</groupId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	

	<artifactId>apam-test</artifactId>

	<packaging>jar</packaging>
	<description>APAM Testing Helpers, contains the APAM testing helpers.</description>
	<name>testing</name>
	<url>http://maven.apache.org</url>
	<properties>

		<!-- Encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<!-- Project dependencies -->
	<dependencies>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.compendium</artifactId>
			<version>4.2.0</version>
			<scope>test</scope>
		</dependency>


		<!-- Test dependencies -->
		<dependency>
			<groupId>org.ow2.chameleon.testing</groupId>
			<artifactId>osgi-helpers</artifactId>
			<version>0.2.0</version>
			<scope>test</scope>
		</dependency>

		<!-- Pax Exam API: -->
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam</artifactId>
			<version>1.2.4</version>
			<scope>test</scope>
		</dependency>

		<!-- During runtime Pax Exam will discover the OSGi container to use by 
			searching metadata available into classpath. Pax Exam comes with a default 
			container that uses [Pax Runner] for implementing the container requirements: -->
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-container-default
    			</artifactId>
			<version>1.2.4</version>
			<scope>test</scope>

		</dependency>
		<!-- If your test code is based on JUnit you will have to have the Junit 
			support artifact: -->
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-junit</artifactId>
			<version>1.2.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.6.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>fr.imag.adele.apam</groupId>
			<artifactId>APAM</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
<!-- 		<dependency> -->
<!-- 			<groupId>fr.imag.adele.apam</groupId> -->
<!-- 			<artifactId>ApamCore</artifactId> -->
<!-- 			<version>0.0.1-SNAPSHOT</version> -->
<!-- 			<type>bundle</type> -->
<!-- 			<scope>compile</scope> -->
<!-- 		</dependency> -->
		
		<dependency>
			<groupId>fr.imag.adele.apam</groupId>
			<artifactId>S2</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
			<dependency>
			<groupId>fr.imag.adele.apam</groupId>
			<artifactId>S1</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- Build configuration -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<!-- Test Plugin -->
			<plugin>
				<groupId>org.apache.servicemix.tooling</groupId>
				<artifactId>depends-maven-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<id>generate-depends-file</id>
						<goals>
							<goal>generate-depends-file</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.servicemix.tooling
										</groupId>
										<artifactId>
											depends-maven-plugin
										</artifactId>
										<versionRange>
											[1.2,)
										</versionRange>
										<goals>
											<goal>
												generate-depends-file
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
=======
<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	  	<parent>
		<artifactId>APAM-Tests</artifactId>
		<groupId>fr.imag.adele.apam</groupId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	

	<artifactId>apam-test</artifactId>

	<packaging>jar</packaging>
	<description>APAM Testing Helpers, contains the APAM testing helpers.</description>
	<name>testing</name>
	<url>http://maven.apache.org</url>
	<properties>

		<!-- Encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<!-- Project dependencies -->
	<dependencies>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.compendium</artifactId>
			<version>4.2.0</version>
			<scope>test</scope>
		</dependency>


		<!-- Test dependencies -->
		<dependency>
			<groupId>org.ow2.chameleon.testing</groupId>
			<artifactId>osgi-helpers</artifactId>
			<version>0.2.0</version>
			<scope>test</scope>
		</dependency>

		<!-- Pax Exam API: -->
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam</artifactId>
			<version>1.2.4</version>
			<scope>test</scope>
		</dependency>

		<!-- During runtime Pax Exam will discover the OSGi container to use by 
			searching metadata available into classpath. Pax Exam comes with a default 
			container that uses [Pax Runner] for implementing the container requirements: -->
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-container-default
    			</artifactId>
			<version>1.2.4</version>
			<scope>test</scope>

		</dependency>
		<!-- If your test code is based on JUnit you will have to have the Junit 
			support artifact: -->
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-junit</artifactId>
			<version>1.2.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.6.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>fr.imag.adele.apam</groupId>
			<artifactId>APAM</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
<!-- 		<dependency> -->
<!-- 			<groupId>fr.imag.adele.apam</groupId> -->
<!-- 			<artifactId>ApamCore</artifactId> -->
<!-- 			<version>0.0.1-SNAPSHOT</version> -->
<!-- 			<type>bundle</type> -->
<!-- 			<scope>compile</scope> -->
<!-- 		</dependency> -->
		
		<dependency>
			<groupId>fr.imag.adele.apam</groupId>
			<artifactId>S2</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
			<dependency>
			<groupId>fr.imag.adele.apam</groupId>
			<artifactId>S1</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- Build configuration -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<!-- Test Plugin -->
			<plugin>
				<groupId>org.apache.servicemix.tooling</groupId>
				<artifactId>depends-maven-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<id>generate-depends-file</id>
						<goals>
							<goal>generate-depends-file</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.servicemix.tooling
										</groupId>
										<artifactId>
											depends-maven-plugin
										</artifactId>
										<versionRange>
											[1.2,)
										</versionRange>
										<goals>
											<goal>
												generate-depends-file
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
>>>>>>> ce0b465a716c3a72bd812ece418c29abfa286595
